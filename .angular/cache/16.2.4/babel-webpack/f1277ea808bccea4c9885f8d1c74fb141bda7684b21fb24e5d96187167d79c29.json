{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ContactService = /*#__PURE__*/(() => {\n  var _class;\n  class ContactService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.serverUrl = `http://localhost:8000`;\n    }\n    //      GET ALL CONTACTS\n    getAllContacts() {\n      let dataURL = `${this.serverUrl}/contacts`;\n      return this.httpClient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //      GET SINGLE CONTACT\n    getContact(contactId) {\n      let dataURL = `${this.serverUrl}/contacts/${contactId}`;\n      return this.httpClient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //      CREATE A CONTACT\n    createContact(contact) {\n      let dataURL = `${this.serverUrl}/contacts`;\n      return this.httpClient.post(dataURL, contact).pipe(catchError(this.handleError));\n    }\n    //      UPDATE A CONTACT\n    updateContact(contact, contactId) {\n      let dataURL = `${this.serverUrl}/contacts/${contactId}`;\n      return this.httpClient.put(dataURL, contact).pipe(catchError(this.handleError));\n    }\n    //      DELETE A CONTACT\n    deleteContact(contactId) {\n      let dataURL = `${this.serverUrl}/contacts/${contactId}`;\n      return this.httpClient.delete(dataURL).pipe(catchError(this.handleError));\n    }\n    //      GET ALL GROUPS\n    getAllGroups() {\n      let dataURL = `${this.serverUrl}/groups`;\n      return this.httpClient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //      GET SINGLE GROUP\n    getGroup(contact) {\n      let dataURL = `${this.serverUrl}/groups/${contact.groupId}`;\n      return this.httpClient.get(dataURL).pipe(catchError(this.handleError));\n    }\n    //      ERROR Handling\n    handleError(error) {\n      let errorMessage = '';\n      if (error.error instanceof ErrorEvent) {\n        //      client-side error\n        errorMessage = `Error : ${error.error.message}`;\n      } else {\n        //       server-side error\n        errorMessage = `Status : ${error.status} \\n Message: ${error.message}`;\n      }\n      return throwError(errorMessage);\n    }\n  }\n  _class = ContactService;\n  _class.ɵfac = function ContactService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac,\n    providedIn: 'root'\n  });\n  return ContactService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}